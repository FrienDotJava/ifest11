name: NodeJS CI/CD

on:
  push:
    branches: ["latte-dev"]
  pull_request:
    branches: ["latte-dev"]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3

      - id: pnpm-install
        name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - id: pnpm-cache
        name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

  build:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3

      - id: pnpm-install
        name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
          run_install: false

      - id: pnpm-cache
        name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - id: get-date
        name: Get Date
        shell: bash
        run: |
          echo "date=$(/bin/date -u "+%Y-%m-%dT%H:%M")" >> $GITHUB_OUTPUT

      - name: Setup build cache
        uses: actions/cache/save@v3
        with:
          path: out
          key: ${{ runner.os }}-nextjs-build-${{ steps.get-date.outputs.date }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Restore build cache
        uses: actions/cache/restore@v3
        with:
          path: out
          key: ${{ runner.os }}-nextjs-build-

      - name: Deploy to Firebase
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_HIMAFORKA_UAJY_ID }}"
          projectId: himaforka-uajy-id
          channelId: live
